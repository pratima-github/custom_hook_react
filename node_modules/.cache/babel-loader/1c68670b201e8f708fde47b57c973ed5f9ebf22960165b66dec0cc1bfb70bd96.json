{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\n//custom hook always start with Use\nconst UseCounter = () => {\n  _s();\n  const [counter, setCounter] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCounter(prevCounter => prevCounter - 1);\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return counter;\n};\n_s(UseCounter, \"uPkTgB8PBsujXy6a5mXWSxFNaD8=\");\n_c = UseCounter;\nexport default UseCounter;\nvar _c;\n$RefreshReg$(_c, \"UseCounter\");","map":{"version":3,"names":["useState","useEffect","UseCounter","_s","counter","setCounter","interval","setInterval","prevCounter","clearInterval","_c","$RefreshReg$"],"sources":["C:/Users/PRATIMA/Downloads/01-starting-project (5)/custom_hook_project/src/hooks/use-counter.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n//custom hook always start with Use\r\nconst UseCounter = () => {\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCounter((prevCounter) => prevCounter - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n  return counter;\r\n};\r\nexport default UseCounter;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C;AACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCF,UAAU,CAAEG,WAAW,IAAKA,WAAW,GAAG,CAAC,CAAC;IAC9C,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,OAAO;AAChB,CAAC;AAACD,EAAA,CAXID,UAAU;AAAAQ,EAAA,GAAVR,UAAU;AAYhB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}